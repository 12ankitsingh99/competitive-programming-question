Question
Given an unsorted array arr[] of size N, rotate it by D elements (clockwise). 

Input:
The first line of the input contains T denoting the number of testcases. First line of each test case contains two space separated elements, N denoting the size of the array and an integer D denoting the number size of the rotation. Subsequent line will be the N space separated array elements.

Output:
For each testcase, in a new line, output the rotated array.

Constraints:
1 <= T <= 200
1 <= N <= 107
1 <= D <= N
0 <= arr[i] <= 105

Example:
Input:
2
5 2
1 2 3 4 5 
10 3
2 4 6 8 10 12 14 16 18 20

Output:
3 4 5 1 2
8 10 12 14 16 18 20 2 4 6

Explanation :
Testcase 1: 1 2 3 4 5  when rotated by 2 elements, it becomes 3 4 5 1 2.
 

Solution:-\
def rotateArr(d, n, list):
    list[0:d] = reversed(list[0:d])
    list[d:n] = reversed(list[d:n])
    list[0:n] = reversed(list[0:n])

if __name__ == "__main__":
    t = int(input())
    while(t>0):
        # take n and d input
        n_d = [int(x) for x in input().strip().split()]
        n = n_d[0]
        d = n_d[1]
        list = [int(x) for x in input().strip().split()]

        # call the rotate function
        rotateArr(d, n, list)

        # print the list
        for i in range(n):
            print(list[i], end=" ")
        print()
        t=t-1
